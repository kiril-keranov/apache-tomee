name: Integration Tests
"on":
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  integration:
    name: Integration Tests
    runs-on:
      - ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: "1.16"
      - name: Install create-package
        run: |
          #!/usr/bin/env bash

          set -euo pipefail

          GO111MODULE=on go get -u -ldflags="-s -w" github.com/paketo-buildpacks/libpak/cmd/create-package
      - name: Install crane
        run: |
          #!/usr/bin/env bash

          set -euo pipefail

          echo "Installing crane ${CRANE_VERSION}"

          mkdir -p "${HOME}"/bin
          echo "${HOME}/bin" >> "${GITHUB_PATH}"

          curl \
            --show-error \
            --silent \
            --location \
            "https://github.com/google/go-containerregistry/releases/download/v${CRANE_VERSION}/go-containerregistry_Linux_x86_64.tar.gz" \
          | tar -C "${HOME}/bin" -xz crane
        env:
          CRANE_VERSION: 0.6.0
      - name: Install pack
        run: |
          #!/usr/bin/env bash

          set -euo pipefail

          echo "Installing pack ${PACK_VERSION}"

          mkdir -p "${HOME}"/bin
          echo "${HOME}/bin" >> "${GITHUB_PATH}"

          curl \
            --location \
            --show-error \
            --silent \
            "https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz" \
          | tar -C "${HOME}"/bin -xz pack
        env:
          PACK_VERSION: 0.21.1
      - name: Install container structure test
        run: |
          #!/usr/bin/env bash

          set -euo pipefail

          echo "Installing container-structure-test latest"

          mkdir -p "${HOME}"/bin
          echo "${HOME}/bin" >> "${GITHUB_PATH}"

          curl \
            --location \
            --show-error \
            --silent \
            -o container-structure-test-linux-amd64 \
            https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64 && \
            chmod +x container-structure-test-linux-amd64 && \
            mv container-structure-test-linux-amd64 ${HOME}/bin/container-structure-test
      - name: Enable pack Experimental
        if: ${{ false }}
        run: |
          #!/usr/bin/env bash

          set -euo pipefail

          echo "Enabling pack experimental features"

          mkdir -p "${HOME}"/.pack
          echo "experimental = true" >> "${HOME}"/.pack/config.toml
      - uses: actions/checkout@v2
      - if: ${{ false }}
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-go-${{ hashFiles('**/buildpack.toml', '**/package.toml') }}
          path: |-
            ${{ env.HOME }}/.pack
            ${{ env.HOME }}/carton-cache
          restore-keys: ${{ runner.os }}-go-
      - name: Test
        run: |
          #!/usr/bin/env bash

          set -euo pipefail

          pack config default-builder paketobuildpacks/builder:base

          make venom integration
